version: '3.8'

services:

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - chat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_service
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/auth_service?sslmode=disable
      - MIGRATIONS_DIR=/app/internal/migrations
    ports:
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - chat-network
    restart: unless-stopped

  chat-service:
    build:
      context: .
      dockerfile: ./chat-service/Dockerfile
    container_name: chat-service
    environment:
      - GRPC_PORT=50052
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=chat_service
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/chat_service?sslmode=disable
      - MIGRATIONS_DIR=/app/internal/migrations
      - AUTH_SERVICE_ADDR=auth-service:50051
    ports:
      - "50052:50052"
    depends_on:
      - auth-service
    networks:
      - chat-network
    restart: unless-stopped

volumes:
  postgres-data:

networks:
  chat-network:
    driver: bridge
